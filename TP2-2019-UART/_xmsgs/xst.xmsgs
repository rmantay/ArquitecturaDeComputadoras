<?xml version="1.0" encoding="UTF-8"?>
<!-- IMPORTANT: This is an internal file that has been generated
     by the Xilinx ISE software.  Any direct editing or
     changes made to this file may result in unpredictable
     behavior or data corruption.  It is strongly advised that
     users do not edit the contents of this file. -->
<messages>
<msg type="warning" file="Xst" num="863" delta="new" >&quot;<arg fmt="%s" index="1">Int_Rx.v</arg>&quot; line <arg fmt="%d" index="2">32</arg>: Name conflict (<arg fmt="%s" index="3">&lt;ch&gt; and &lt;CH&gt;, renaming ch as ch_rnm0</arg>).
</msg>

<msg type="warning" file="Xst" num="863" delta="new" >&quot;<arg fmt="%s" index="1">Int_Rx.v</arg>&quot; line <arg fmt="%d" index="2">31</arg>: Name conflict (<arg fmt="%s" index="3">&lt;state&gt; and &lt;STATE&gt;, renaming state as state_rnm0</arg>).
</msg>

<msg type="warning" file="Xst" num="863" delta="new" >&quot;<arg fmt="%s" index="1">Int_Rx.v</arg>&quot; line <arg fmt="%d" index="2">32</arg>: Name conflict (<arg fmt="%s" index="3">&lt;op&gt; and &lt;OP&gt;, renaming op as op_rnm0</arg>).
</msg>

<msg type="warning" file="Xst" num="863" delta="new" >&quot;<arg fmt="%s" index="1">Int_Rx.v</arg>&quot; line <arg fmt="%d" index="2">32</arg>: Name conflict (<arg fmt="%s" index="3">&lt;datoA&gt; and &lt;DATOA&gt;, renaming datoA as datoa_rnm0</arg>).
</msg>

<msg type="warning" file="Xst" num="863" delta="new" >&quot;<arg fmt="%s" index="1">Int_Rx.v</arg>&quot; line <arg fmt="%d" index="2">32</arg>: Name conflict (<arg fmt="%s" index="3">&lt;datoB&gt; and &lt;DATOB&gt;, renaming datoB as datob_rnm0</arg>).
</msg>

<msg type="warning" file="Xst" num="643" delta="new" >&quot;<arg fmt="%s" index="1">Int_Rx.v</arg>&quot; line <arg fmt="%d" index="2">217</arg>: The result of a <arg fmt="%d" index="3">8</arg>x<arg fmt="%d" index="4">4</arg>-bit multiplication is partially used. Only the <arg fmt="%d" index="5">8</arg> least significant bits are used. If you are doing this on purpose, you may safely ignore this warning. Otherwise, make sure you are not losing information, leading to unexpected circuit behavior.
</msg>

<msg type="warning" file="Xst" num="643" delta="new" >&quot;<arg fmt="%s" index="1">Int_Rx.v</arg>&quot; line <arg fmt="%d" index="2">175</arg>: The result of a <arg fmt="%d" index="3">8</arg>x<arg fmt="%d" index="4">4</arg>-bit multiplication is partially used. Only the <arg fmt="%d" index="5">8</arg> least significant bits are used. If you are doing this on purpose, you may safely ignore this warning. Otherwise, make sure you are not losing information, leading to unexpected circuit behavior.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">8</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">ch_rnm0</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="info" file="Xst" num="2371" delta="new" >HDL ADVISOR - Logic functions respectively driving the data and gate enable inputs of this latch share common terms. This situation will potentially lead to setup/hold violations and, as a result, to simulation problems. This situation may come from an incomplete case statement (all selector values are not covered). You should carefully review if it was in your intentions to describe such a latch.
</msg>

<msg type="warning" file="Xst" num="1710" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">op_rnm0_7</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Int_Rx</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">op_rnm0_6</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Int_Rx</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">op_rnm0_4</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Int_Rx</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">op_rnm0_3</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Int_Rx</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

</messages>

